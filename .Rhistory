#----------------------------------------------------------------------
#variants_004_summary_visualize.R
#----------------------------------------------------------------------
#----------------------------------------------------------------------
#load functions and libraries
#----------------------------------------------------------------------
options(stringsAsFactors=F)
#load libraries
packages <- c("dplyr", "readr", "ggplot2", "vcfR", "tidyr", "mclust", "data.table", "plyr",
"ggrepel", "stringr", "maftools", "VariantAnnotation", "ggpubr")
lapply(packages, require, character.only = TRUE)
library(Biobase)
# Convert the row names to entrez ids
library("AnnotationDbi")
library("org.Hs.eg.db")
columns(org.Hs.eg.db)
date = Sys.Date()
#do this locally - transfer files from cluster
#/cluster/projects/kridelgroup/FLOMICS/variant_analysis_folder/SNP_matrices_all_algortihms
setwd("/Users/kisaev/FLOMICS_Anjali/FLOMICS_Anajli/Data")
all_variants = readRDS(list.files(pattern="_.rds")[1])
#gene annotations
genes = unique(fread("ucsc_table_browser_gene_IDs.txt"))
colnames(genes)[2] = "Gene.ensGene"
all_variants
all_variants[1,]
list.files(pattern="_.rds")
list.files(pattern="_.rds")[length(list.files(pattern="_.rds"))]
all_variants = readRDS(list.files(pattern="_.rds")[length(list.files(pattern="_.rds"))])
all_variants[1,]
z = which(strdetect(all_variants$avsnp142, "rs"))
z
#[1.] remove likely SNPs based on rs id and population frequency when available
z = which(str_detect(all_variants$avsnp142, "rs"))
which(str_detect(all_variants$avsnp142, "rs"))
#[1.] remove likely SNPs based on rs id and population frequency when available
all_variants$avsnp142 = as.character(all_variants$avsnp142)
z = which(str_detect(all_variants$avsnp142, "rs"))
z
all_variants$avsnp142 = as.character(all_variants$avsnp142)
z = which(str_detect(all_variants$avsnp142, "rs"))
#get list of all unique variants that are likely SNPs
snps = all_variants[z,]
all_variants = all_variants[-z,]
snps
length(unique(snps$avsnp142))
table(snps$avsnp142)
as.data.table(table(snps$avsnp142))
snps_sum = as.data.table(table(snps$avsnp142)) ; snps_sum = snps_sum[order(-N)]
snps_sum
all_variants
table(all_variants$id)
table(all_variants$algo)
algo_sum = as.data.table(table(all_variants$algo)) ; algo_sum = algo_sum[order(-N)]
algo_sum
unique(all_variants$AAChange.ensGene
)
View(snps_sum)
variants
View(all_variants)
